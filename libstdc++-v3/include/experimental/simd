// Components for element-wise operations on data-parallel objects -*- C++ -*-

// Please review: $(src-dir)/SPL-README for Licencing info.

//
// N4773 ยง9 data-parallel types library
//

#ifndef _GLIBCXX_EXPERIMENTAL_SIMD
#define _GLIBCXX_EXPERIMENTAL_SIMD

#if __cplusplus >= 201703L

/** @defgroup par-ts Parallelism TS
 *  @ingroup experimental
 *
 * Components defined by the _C++ Extensions for Parallelism_
 * Technical Specification.
 *
 * - ISO/IEC TS 19570:2015 C++ Extensions for Parallelism
 * - ISO/IEC TS 19570:2018 C++ Extensions for Parallelism, Version 2
 */

/** @defgroup ts_simd Data parallel extensions
 *  @ingroup par-ts
 *
 *  Data-parallel types library.
 *  @since C++17
 */
/// @ingroup ts_simd
#define __cpp_lib_experimental_parallel_simd 201803

#pragma GCC diagnostic push
// Many [[gnu::vector_size(N)]] types might lead to a -Wpsabi warning which is
// irrelevant as those functions never appear on ABI borders
#ifndef __clang__
#pragma GCC diagnostic ignored "-Wpsabi"
#endif

// If __OPTIMIZE__ is not defined some intrinsics are defined as macros, making
// use of C casts internally. This requires us to disable the warning as it
// would otherwise yield many false positives.
#ifndef __OPTIMIZE__
#pragma GCC diagnostic ignored "-Wold-style-cast"
#endif

#include "bits/simd_detail.h"
#include "bits/simd.h"
#include "bits/simd_fixed_size.h"
#include "bits/simd_scalar.h"
#include "bits/simd_builtin.h"
#include "bits/simd_converter.h"
#if _GLIBCXX_SIMD_X86INTRIN
#include "bits/simd_x86.h"
#elif _GLIBCXX_SIMD_HAVE_NEON
#include "bits/simd_neon.h"
#elif __ALTIVEC__
#include "bits/simd_ppc.h"
#endif
#include "bits/simd_math.h"

#pragma GCC diagnostic pop

#endif // C++17
#endif // _GLIBCXX_EXPERIMENTAL_SIMD
// vim: ft=cpp
